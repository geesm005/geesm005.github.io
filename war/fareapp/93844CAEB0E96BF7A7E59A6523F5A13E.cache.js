fareapp.onScriptDownloaded(["var $wnd = $wnd || window.parent;\nvar __gwtModuleFunction = $wnd.fareapp;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.6.0\";\nvar $strongName = '93844CAEB0E96BF7A7E59A6523F5A13E';\nvar $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {\nvar fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';\nreturn __gwtModuleFunction.__startLoadingFragment(fragFile);\n}\nfunction __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}\nvar $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, seedTable = {}, Q$Object = 0, Q$String = 1, Q$JavaScriptException = 2, Q$ClickHandler = 3, Q$DomEvent$Type = 4, Q$CloseHandler = 5, Q$HasAttachHandlers = 6, Q$EventHandler = 7, Q$HasHandlers = 8, Q$RequestException = 9, Q$JSONArray = 10, Q$JSONNumber = 11, Q$JSONObject = 12, Q$JSONString = 13, Q$LongLibBase$LongEmul = 14, Q$EventListener = 15, Q$HasVisibility = 16, Q$IsWidget = 17, Q$RootPanel = 18, Q$UIObject = 19, Q$Widget = 20, Q$SimpleEventBus$Command = 21, Q$UmbrellaException = 22, Q$FareApp$1 = 23, Q$Serializable = 24, Q$Boolean = 25, Q$CharSequence = 26, Q$Comparable = 27, Q$Double = 28, Q$StackTraceElement = 29, Q$Throwable = 30, Q$List = 31, Q$Map = 32, Q$Map$Entry = 33, Q$Set = 34, CM$ = {};\nfunction newSeed(id_0){\n  return new seedTable[id_0];\n}\n\nfunction defineSeed(id_0, superSeed, castableTypeMap){\n  var seed = seedTable[id_0];\n  if (seed && !seed.___clazz$) {\n    _ = seed.prototype;\n  }\n   else {\n    !seed && (seed = seedTable[id_0] = function(){\n    }\n    );\n    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);\n    _.castableTypeMap$ = castableTypeMap;\n  }\n  for (var i = 3; i < arguments.length; ++i) {\n    arguments[i].prototype = _;\n  }\n  if (seed.___clazz$) {\n    _.___clazz$ = seed.___clazz$;\n    seed.___clazz$ = null;\n  }\n}\n\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_1(){\n}\n\ndefineSeed(1, -1, CM$, Object_1);\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\nfunction $initCause(this$static, cause){\n  if (this$static.cause) {\n    throw new IllegalStateException_0(\"Can't overwrite cause\");\n  }\n  if (cause == this$static) {\n    throw new IllegalArgumentException_1('Self-causation not permitted');\n  }\n  this$static.cause = cause;\n  return this$static;\n}\n\nfunction $setStackTrace(stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n}\n\nfunction $toString(this$static){\n  var className, msg;\n  className = this$static.___clazz$.typeName;\n  msg = this$static.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n\ndefineSeed(8, 1, makeCastMap([Q$Serializable, Q$Throwable]));\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_1(){\n  return $toString(this);\n}\n;\nfunction Exception_0(message){\n  this.detailMessage = message;\n  $fillInStackTrace($clinit_StackTraceCreator$CollectorChrome());\n}\n\ndefineSeed(7, 8, makeCastMap([Q$Serializable, Q$Throwable]));\nfunction RuntimeException_0(){\n  $fillInStackTrace($clinit_StackTraceCreator$CollectorChrome());\n}\n\nfunction RuntimeException_1(message){\n  Exception_0.call(this, message);\n}\n\nfunction RuntimeException_2(message, cause){\n  this.cause = cause;\n  this.detailMessage = message;\n  $fillInStackTrace($clinit_StackTraceCreator$CollectorChrome());\n}\n\ndefineSeed(6, 7, makeCastMap([Q$Serializable, Q$Throwable]), RuntimeException_1);\nfunction $clinit_JavaScriptException(){\n  $clinit_JavaScriptException = nullMethod;\n  NOT_SET = new Object_1;\n}\n\nfunction $ensureInit(this$static){\n  var exception, maybeJsoInvocation;\n  if (this$static.message_0 == null) {\n    exception = this$static.e === NOT_SET?null:this$static.e;\n    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(dynamicCastJso(exception)):instanceOf(exception, Q$String)?'String':(maybeJsoInvocation = exception , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;\n    this$static.description = this$static.description + ': ' + (instanceOfJso(exception)?getExceptionDescription0(dynamicCastJso(exception)):exception + '');\n    this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception)?getProperties(dynamicCastJso(exception)):'') + this$static.description;\n  }\n}\n\nfunction JavaScriptException_0(e){\n  $clinit_JavaScriptException();\n  RuntimeException_0.call(this);\n  this.description = '';\n  this.e = e;\n  this.description = '';\n  $createStackTrace(new StackTraceCreator$CollectorChromeNoSourceMap_0, this);\n}\n\nfunction getExceptionDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getExceptionName0(e){\n  return e == null?null:e.name;\n}\n\ndefineSeed(5, 6, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Throwable]), JavaScriptException_0);\n_.getMessage = function getMessage_0(){\n  return $ensureInit(this) , this.message_0;\n}\n;\n_.getThrown = function getThrown(){\n  return this.e === NOT_SET?null:this.e;\n}\n;\nvar NOT_SET;\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\nfunction $clinit_JsonUtils(){\n  $clinit_JsonUtils = nullMethod;\n  escapeTable = initEscapeTable();\n  hasJsonParse = typeof JSON == 'object' && typeof JSON.parse == 'function';\n}\n\nfunction escapeChar(c){\n  var lookedUp = escapeTable[c.charCodeAt(0)];\n  return lookedUp == null?c:lookedUp;\n}\n\nfunction escapeJsonForEval(toEscape){\n  $clinit_JsonUtils();\n  var s = toEscape.replace(/[\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb]/g, function(x_0){\n    return escapeChar(x_0);\n  }\n  );\n  return s;\n}\n\nfunction escapeValue(toEscape){\n  $clinit_JsonUtils();\n  var s = toEscape.replace(/[\\x00-\\x1f\\xad\\u0600-\\u0603\\u06dd\\u070f\\u17b4\\u17b5\\u200b-\\u200f\\u2028-\\u202e\\u2060-\\u2064\\u206a-\\u206f\\ufeff\\ufff9-\\ufffb\"\\\\]/g, function(x_0){\n    return escapeChar(x_0);\n  }\n  );\n  return '\"' + s + '\"';\n}\n\nfunction initEscapeTable(){\n  var out = ['\\\\u0000', '\\\\u0001', '\\\\u0002', '\\\\u0003', '\\\\u0004', '\\\\u0005', '\\\\u0006', '\\\\u0007', '\\\\b', '\\\\t', '\\\\n', '\\\\u000B', '\\\\f', '\\\\r', '\\\\u000E', '\\\\u000F', '\\\\u0010', '\\\\u0011', '\\\\u0012', '\\\\u0013', '\\\\u0014', '\\\\u0015', '\\\\u0016', '\\\\u0017', '\\\\u0018', '\\\\u0019', '\\\\u001A', '\\\\u001B', '\\\\u001C', '\\\\u001D', '\\\\u001E', '\\\\u001F'];\n  out[34] = '\\\\\"';\n  out[92] = '\\\\\\\\';\n  out[173] = '\\\\u00ad';\n  out[1536] = '\\\\u0600';\n  out[1537] = '\\\\u0601';\n  out[1538] = '\\\\u0602';\n  out[1539] = '\\\\u0603';\n  out[1757] = '\\\\u06dd';\n  out[1807] = '\\\\u070f';\n  out[6068] = '\\\\u17b4';\n  out[6069] = '\\\\u17b5';\n  out[8203] = '\\\\u200b';\n  out[8204] = '\\\\u200c';\n  out[8205] = '\\\\u200d';\n  out[8206] = '\\\\u200e';\n  out[8207] = '\\\\u200f';\n  out[8232] = '\\\\u2028';\n  out[8233] = '\\\\u2029';\n  out[8234] = '\\\\u202a';\n  out[8235] = '\\\\u202b';\n  out[8236] = '\\\\u202c';\n  out[8237] = '\\\\u202d';\n  out[8238] = '\\\\u202e';\n  out[8288] = '\\\\u2060';\n  out[8289] = '\\\\u2061';\n  out[8290] = '\\\\u2062';\n  out[8291] = '\\\\u2063';\n  out[8292] = '\\\\u2064';\n  out[8298] = '\\\\u206a';\n  out[8299] = '\\\\u206b';\n  out[8300] = '\\\\u206c';\n  out[8301] = '\\\\u206d';\n  out[8302] = '\\\\u206e';\n  out[8303] = '\\\\u206f';\n  out[65279] = '\\\\ufeff';\n  out[65529] = '\\\\ufff9';\n  out[65530] = '\\\\ufffa';\n  out[65531] = '\\\\ufffb';\n  return out;\n}\n\nvar escapeTable, hasJsonParse = false;\ndefineSeed(13, 1, {});\nfunction apply_0(jsFunction, thisObj, args){\n  return jsFunction.apply(thisObj, args);\n  var __0;\n}\n\nfunction dispose(d){\n  !!d && ($disposeEventSystem(d) , cleanupDOM(d.this$0));\n}\n\nfunction enter(){\n  var now_0;\n  if (entryDepth != 0) {\n    now_0 = (new Date).getTime();\n    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {\n      watchdogEntryDepthLastScheduled = now_0;\n      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();\n    }\n  }\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      return entry0(jsFunction, this, arguments);\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, args){\n  var initialEntry;\n  initialEntry = enter();\n  try {\n    return apply_0(jsFunction, thisObj, args);\n  }\n   finally {\n    exit(initialEntry);\n  }\n}\n\nfunction exit(initialEntry){\n  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE));\n  --entryDepth;\n  if (initialEntry) {\n    if (watchdogEntryDepthTimerId != -1) {\n      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);\n      watchdogEntryDepthTimerId = -1;\n    }\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nfunction registerEntry(){\n  return entry_0;\n}\n\nfunction reportToBrowser(e){\n  $wnd.setTimeout(function(){\n    throw e;\n  }\n  , 0);\n}\n\nfunction setTimeout_0(func, time){\n  return setTimeout0(func, time, null);\n}\n\nfunction watchdogEntryDepthCancel(timerId){\n  clearTimeout0(timerId);\n}\n\nfunction watchdogEntryDepthSchedule(){\n  return setTimeout_0(function(){\n    entryDepth != 0 && (entryDepth = 0);\n    watchdogEntryDepthTimerId = -1;\n  }\n  , 10);\n}\n\nvar entryDepth = 0, sNextHashId = 0, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction push_0(queue, task){\n  !queue && (queue = []);\n  queue[queue.length] = task;\n  return queue;\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; i++) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].nullMethod() && (rescheduled = push_0(rescheduled, t)):($wnd.__gwt_initWindowCloseHandler($entry(onClosing), $entry(onClosed)) , undefined);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  return rescheduled;\n}\n\ndefineSeed(15, 13, {}, SchedulerImpl_0);\nvar INSTANCE;\nfunction extractNameFromToString(fnToString){\n  var index_0, start_0, toReturn;\n  toReturn = '';\n  fnToString = $trim(fnToString);\n  index_0 = fnToString.indexOf('(');\n  start_0 = fnToString.indexOf('function') == 0?8:0;\n  if (index_0 == -1) {\n    index_0 = $indexOf_0(fnToString, fromCodePoint(64));\n    start_0 = fnToString.indexOf('function ') == 0?9:0;\n  }\n  index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));\n  return toReturn.length > 0?toReturn:'anonymous';\n}\n\nfunction getProperties(e){\n  return $getProperties(($clinit_StackTraceCreator$CollectorChrome() , e));\n}\n\nfunction parseInt_0(number){\n  return parseInt(number) || -1;\n}\n\nfunction splice(arr, length_0){\n  arr.length >= length_0 && arr.splice(0, length_0);\n  return arr;\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';\n          result += '\\n ' + prop + ': ' + propValue;\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction $makeException(){\n  try {\n    null.a();\n  }\n   catch (e) {\n    return e;\n  }\n}\n\nfunction StackTraceCreator$Collector_0(){\n}\n\ndefineSeed(18, 1, {}, StackTraceCreator$Collector_0);\n_.collect = function collect(){\n  var seen = {};\n  var toReturn = [];\n  var callee = arguments.callee.caller.caller;\n  while (callee) {\n    var name_0 = this.extractName(callee.toString());\n    toReturn.push(name_0);\n    var keyName = ':' + name_0;\n    var withThisName = seen[keyName];\n    if (withThisName) {\n      var i, j;\n      for (i = 0 , j = withThisName.length; i < j; i++) {\n        if (withThisName[i] === callee) {\n          return toReturn;\n        }\n      }\n    }\n    (withThisName || (seen[keyName] = [])).push(callee);\n    callee = callee.caller;\n  }\n  return toReturn;\n}\n;\n_.extractName = function extractName(fnToString){\n  return extractNameFromToString(fnToString);\n}\n;\n_.inferFrom = function inferFrom(e){\n  return [];\n}\n;\nfunction $inferFrom(this$static, e){\n  var i, j, jso, stack_0;\n  jso = instanceOfJso(e)?dynamicCastJso(e):null;\n  stack_0 = jso && jso.stack?jso.stack.split('\\n'):[];\n  for (i = 0 , j = stack_0.length; i < j; i++) {\n    stack_0[i] = this$static.extractName(stack_0[i]);\n  }\n  return stack_0;\n}\n\ndefineSeed(20, 18, {});\n_.collect = function collect_0(){\n  return splice(this.inferFrom($makeException()), this.toSplice());\n}\n;\n_.inferFrom = function inferFrom_0(e){\n  return $inferFrom(this, e);\n}\n;\n_.toSplice = function toSplice(){\n  return 2;\n}\n;\nfunction $clinit_StackTraceCreator$CollectorChrome(){\n  $clinit_StackTraceCreator$CollectorChrome = nullMethod;\n  Error.stackTraceLimit = 128;\n}\n\nfunction $collect(this$static){\n  var res;\n  res = splice($inferFrom_0(this$static, $makeException()), 3);\n  res.length == 0 && (res = splice((new StackTraceCreator$Collector_0).collect(), 1));\n  return res;\n}\n\nfunction $createStackTrace(this$static, e){\n  var stack_0;\n  stack_0 = $inferFrom_0(this$static, e.e === ($clinit_JavaScriptException() , NOT_SET)?null:e.e);\n  $parseStackTrace(stack_0);\n}\n\nfunction $fillInStackTrace(){\n  var stack_0;\n  stack_0 = $collect(new StackTraceCreator$CollectorChromeNoSourceMap_0);\n  $parseStackTrace(stack_0);\n}\n\nfunction $inferFrom_0(this$static, e){\n  var stack_0;\n  stack_0 = $inferFrom(this$static, e);\n  if (stack_0.length == 0) {\n    return (new StackTraceCreator$Collector_0).inferFrom(e);\n  }\n   else {\n    stack_0[0].indexOf('anonymous@@') == 0 && (stack_0 = splice(stack_0, 1));\n    return stack_0;\n  }\n}\n\nfunction $parseStackTrace(stack_0){\n  var col, endFileUrl, fileName, i, j, lastColon, location_0, stackElements, stackTrace;\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackElements = $split(stack_0[i], '@@', 0);\n    col = -1;\n    fileName = 'Unknown';\n    if (stackElements.length == 2 && stackElements[1] != null) {\n      location_0 = stackElements[1];\n      lastColon = $lastIndexOf(location_0, fromCodePoint(58));\n      endFileUrl = $lastIndexOf_0(location_0, fromCodePoint(58), lastColon - 1);\n      fileName = $substring_0(location_0, 0, endFileUrl);\n      if (lastColon != -1 && endFileUrl != -1) {\n        parseInt_0($substring_0(location_0, endFileUrl + 1, lastColon));\n        col = parseInt_0($substring(location_0, lastColon + 1));\n      }\n    }\n    stackTrace[i] = new StackTraceElement_0(stackElements[0], fileName + '@' + col);\n  }\n  $setStackTrace(stackTrace);\n}\n\ndefineSeed(19, 20, {});\n_.collect = function collect_1(){\n  return $collect(this);\n}\n;\n_.extractName = function extractName_0(fnToString){\n  var closeParen, index_0, location_0, toReturn;\n  if (fnToString.length == 0) {\n    return 'anonymous';\n  }\n  toReturn = $trim(fnToString);\n  toReturn.indexOf('at ') == 0 && (toReturn = $substring(toReturn, 3));\n  index_0 = toReturn.indexOf('[');\n  index_0 != -1 && (toReturn = $trim($substring_0(toReturn, 0, index_0)) + $trim($substring(toReturn, toReturn.indexOf(']', index_0) + 1)));\n  index_0 = toReturn.indexOf('(');\n  if (index_0 == -1) {\n    index_0 = toReturn.indexOf('@');\n    if (index_0 == -1) {\n      location_0 = toReturn;\n      toReturn = '';\n    }\n     else {\n      location_0 = $trim($substring(toReturn, index_0 + 1));\n      toReturn = $trim($substring_0(toReturn, 0, index_0));\n    }\n  }\n   else {\n    closeParen = toReturn.indexOf(')', index_0);\n    location_0 = $substring_0(toReturn, index_0 + 1, closeParen);\n    toReturn = $trim($substring_0(toReturn, 0, index_0));\n  }\n  index_0 = $indexOf_0(toReturn, fromCodePoint(46));\n  index_0 != -1 && (toReturn = $substring(toReturn, index_0 + 1));\n  return (toReturn.length > 0?toReturn:'anonymous') + '@@' + location_0;\n}\n;\n_.inferFrom = function inferFrom_1(e){\n  return $inferFrom_0(this, e);\n}\n;\n_.toSplice = function toSplice_0(){\n  return 3;\n}\n;\nfunction StackTraceCreator$CollectorChromeNoSourceMap_0(){\n  $clinit_StackTraceCreator$CollectorChrome();\n}\n\ndefineSeed(21, 19, {}, StackTraceCreator$CollectorChromeNoSourceMap_0);\ndefineSeed(22, 1, {});\nfunction $append(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction $append_0(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\ndefineSeed(23, 22, {}, StringBufferImplAppend_0);\n_.string = '';\nfunction clearTimeout0(timerId){\n  $wnd.clearTimeout(timerId);\n}\n\nfunction setTimeout0(func, time, disposeable){\n  var timerId = $wnd.setTimeout(function(){\n    func();\n    disposeable != null && dispose(disposeable);\n  }\n  , time);\n  return timerId;\n}\n\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction $isOrHasChild(parent_0, child){\n  return parent_0.contains(child);\n}\n\nfunction $eventGetCurrentTarget(event_0){\n  return event_0.currentTarget || $wnd;\n}\n\nfunction $getTabIndex(elem){\n  return typeof elem.tabIndex != 'undefined'?elem.tabIndex:-1;\n}\n\nfunction $setPropertyImpl(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\ndefineSeed(41, 1, {});\n_.toString$ = function toString_2(){\n  return 'An event type';\n}\n;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\ndefineSeed(40, 41, {});\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, type_0, type$iterator, types;\n  if (registered) {\n    types = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$List);\n    if (types) {\n      for (type$iterator = types.iterator(); type$iterator.hasNext();) {\n        type_0 = dynamicCast(type$iterator.next(), Q$DomEvent$Type);\n        currentNative = type_0.flyweight.nativeEvent;\n        currentRelativeElem = type_0.flyweight.relativeElem;\n        $setNativeEvent(type_0.flyweight, nativeEvent);\n        $setRelativeElement(type_0.flyweight, relativeElem);\n        $fireEvent_0(handlerSource, type_0.flyweight);\n        $setNativeEvent(type_0.flyweight, currentNative);\n        $setRelativeElement(type_0.flyweight, currentRelativeElem);\n      }\n    }\n  }\n}\n\ndefineSeed(39, 40, {});\n_.getAssociatedType = function getAssociatedType(){\n  return $clinit_ClickEvent() , TYPE;\n}\n;\nvar registered;\ndefineSeed(38, 39, {});\ndefineSeed(37, 38, {});\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE = new DomEvent$Type_0(new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\ndefineSeed(36, 37, {}, ClickEvent_0);\n_.dispatch = function dispatch(handler){\n  alert_0($getDistance(dynamicCast(dynamicCast(handler, Q$ClickHandler), Q$FareApp$1).val$myFinder));\n}\n;\nvar TYPE;\ndefineSeed(44, 1, {});\n_.hashCode$ = function hashCode_1(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_3(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\ndefineSeed(43, 44, {}, GwtEvent$Type_0);\nfunction DomEvent$Type_0(flyweight){\n  var types;\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  types = dynamicCast(registered.map_0['click'], Q$List);\n  if (!types) {\n    types = new ArrayList_0;\n    $unsafePut(registered, types);\n  }\n  types.add_0(this);\n  this.name_0 = 'click';\n}\n\ndefineSeed(42, 43, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);\nfunction $unsafeGet(this$static, key){\n  return this$static.map_0[key];\n}\n\nfunction $unsafePut(this$static, value_0){\n  this$static.map_0['click'] = value_0;\n}\n\nfunction PrivateMap_0(){\n  this.map_0 = {};\n}\n\ndefineSeed(45, 1, {}, PrivateMap_0);\nfunction CloseEvent_1(){\n}\n\nfunction fire(source){\n  var event_0;\n  if (TYPE_0) {\n    event_0 = new CloseEvent_1;\n    $fireEvent(source, event_0);\n  }\n}\n\ndefineSeed(47, 40, {}, CloseEvent_1);\n_.dispatch = function dispatch_0(handler){\n  dynamicCast(handler, Q$CloseHandler);\n  detachWidgets();\n}\n;\n_.getAssociatedType = function getAssociatedType_0(){\n  return TYPE_0;\n}\n;\nvar TYPE_0;\nfunction $addHandler(this$static, type_0, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type_0, handler));\n}\n\nfunction $fireEvent(this$static, event_0){\n  var e, oldSource;\n  !event_0.dead || (event_0.dead = false , event_0.source = null);\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap($e0);\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\nfunction HandlerManager_0(source){\n  this.eventBus = new HandlerManager$Bus_0;\n  this.source = source;\n}\n\ndefineSeed(48, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0);\ndefineSeed(51, 1, {});\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add_1(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type_0, handler){\n  if (!type_0) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type_0, handler)):$doAddNow(this$static, type_0, handler);\n  return new SimpleEventBus$1_0;\n}\n\nfunction $doAddNow(this$static, type_0, handler){\n  var l;\n  l = $ensureHandlerList(this$static, type_0);\n  l.add_0(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.i > 0:it.i < it.this$0_0.size_1()) {\n      handler = this$static.isReverseOrder?$previous(it):$next_0(it);\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_2(causes, e);\n        }\n         else \n          throw unwrap($e0);\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $ensureHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_0(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put(this$static.map_0, type_0, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    $putNullSlot(sourceMap, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type_0){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type_0);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_0(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_1();) {\n        c = dynamicCast($next_0(c$iterator), Q$SimpleEventBus$Command);\n        $doAddNow(c.this$0, c.val$type, c.val$handler);\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\ndefineSeed(50, 51, {});\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction HandlerManager$Bus_0(){\n  this.map_0 = new HashMap_0;\n  this.isReverseOrder = false;\n}\n\ndefineSeed(49, 50, {}, HandlerManager$Bus_0);\nfunction LegacyHandlerWrapper_0(){\n}\n\ndefineSeed(52, 1, {}, LegacyHandlerWrapper_0);\nfunction UmbrellaException_1(causes){\n  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));\n  this.causes = causes;\n}\n\nfunction makeCause(causes){\n  var iterator;\n  iterator = causes.iterator();\n  if (!iterator.hasNext()) {\n    return null;\n  }\n  return dynamicCast(iterator.next(), Q$Throwable);\n}\n\nfunction makeMessage(causes){\n  var b, count, first, t, t$iterator;\n  count = causes.size_1();\n  if (count == 0) {\n    return null;\n  }\n  b = new StringBuilder_0(count == 1?'Exception caught: ':count + ' exceptions caught: ');\n  first = true;\n  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {\n    t = dynamicCast(t$iterator.next(), Q$Throwable);\n    first?(first = false):($append_0(b.impl, '; ') , b);\n    $append_3(b, t.getMessage());\n  }\n  return b.impl.string;\n}\n\ndefineSeed(54, 6, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_1);\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\ndefineSeed(53, 54, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_2);\nfunction $cancel(this$static){\n  var xmlHttp;\n  if (this$static.xmlHttpRequest) {\n    xmlHttp = this$static.xmlHttpRequest;\n    this$static.xmlHttpRequest = null;\n    $clearOnReadyStateChange(xmlHttp);\n    xmlHttp.abort();\n    this$static.timeoutMillis > 0 && clearTimeout0(this$static.timerId);\n  }\n}\n\nfunction $fireOnResponseReceived(this$static, callback){\n  var errorMsg, response, xhr;\n  if (!this$static.xmlHttpRequest) {\n    return;\n  }\n  this$static.timeoutMillis > 0 && clearTimeout0(this$static.timerId);\n  xhr = this$static.xmlHttpRequest;\n  this$static.xmlHttpRequest = null;\n  errorMsg = $getBrowserSpecificFailure(xhr);\n  if (errorMsg != null) {\n    new RuntimeException_1(errorMsg);\n    alert_0(\"onError: Couldn't retrieve JSON\");\n  }\n   else {\n    response = new ResponseImpl_0(xhr);\n    $onResponseReceived(callback, response);\n  }\n}\n\nfunction $getBrowserSpecificFailure(xhr){\n  try {\n    if (xhr.status === undefined) {\n      return 'XmlHttpRequest.status == undefined, please see Safari bug http://bugs.webkit.org/show_bug.cgi?id=3810 for more details';\n    }\n    return null;\n  }\n   catch (e) {\n    return 'Unable to read XmlHttpRequest.status; likely causes are a networking error or bad cross-domain request. Please see https://bugzilla.mozilla.org/show_bug.cgi?id=238559 for more details';\n  }\n}\n\nfunction Request_0(xmlHttpRequest, timeoutMillis, callback){\n  if (!xmlHttpRequest) {\n    throw new NullPointerException_0;\n  }\n  if (!callback) {\n    throw new NullPointerException_0;\n  }\n  if (timeoutMillis < 0) {\n    throw new IllegalArgumentException_0;\n  }\n  this.timeoutMillis = timeoutMillis;\n  this.xmlHttpRequest = xmlHttpRequest;\n  timeoutMillis > 0?(this.timerId = createTimeout(this, callback, timeoutMillis)):(this.timerId = 0);\n}\n\nfunction createTimeout(request, callback, timeoutMillis){\n  return setTimeout_0($entry(function(){\n    request.fireOnTimeout(callback);\n  }\n  ), timeoutMillis);\n}\n\ndefineSeed(55, 1, {}, Request_0);\n_.fireOnTimeout = function fireOnTimeout(callback){\n  if (!this.xmlHttpRequest) {\n    return;\n  }\n  $cancel(this);\n  new RequestTimeoutException_0(this.timeoutMillis);\n  alert_0(\"onError: Couldn't retrieve JSON\");\n}\n;\n_.timeoutMillis = 0;\n_.timerId = 0;\nfunction $clinit_RequestBuilder(){\n  $clinit_RequestBuilder = nullMethod;\n  new RequestBuilder$Method_0('DELETE');\n  GET = new RequestBuilder$Method_0('GET');\n  new RequestBuilder$Method_0('HEAD');\n  new RequestBuilder$Method_0('POST');\n  new RequestBuilder$Method_0('PUT');\n}\n\n",
"function $doSend(this$static, callback){\n  var e, request, requestPermissionException, xmlHttpRequest;\n  xmlHttpRequest = create();\n  try {\n    $open(xmlHttpRequest, this$static.httpMethod, this$static.url_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      e = $e0;\n      requestPermissionException = new RequestPermissionException_0(this$static.url_0);\n      $initCause(requestPermissionException, new RequestException_0(e.getMessage()));\n      throw requestPermissionException;\n    }\n     else \n      throw unwrap($e0);\n  }\n  xmlHttpRequest.setRequestHeader('Content-Type', 'text/plain; charset=utf-8');\n  this$static.includeCredentials && (xmlHttpRequest.withCredentials = true , undefined);\n  request = new Request_0(xmlHttpRequest, this$static.timeoutMillis, callback);\n  $setOnReadyStateChange(xmlHttpRequest, new RequestBuilder$1_0(request, callback));\n  try {\n    xmlHttpRequest.send(null);\n  }\n   catch ($e1) {\n    $e1 = wrap($e1);\n    if (instanceOf($e1, Q$JavaScriptException)) {\n      e = $e1;\n      throw new RequestException_0(e.getMessage());\n    }\n     else \n      throw unwrap($e1);\n  }\n  return request;\n}\n\nfunction $sendRequest(this$static, callback){\n  throwIfNull('callback', callback);\n  return $doSend(this$static, callback);\n}\n\nfunction RequestBuilder_0(httpMethod){\n  $clinit_RequestBuilder();\n  RequestBuilder_1.call(this, !httpMethod?null:httpMethod.name_0);\n}\n\nfunction RequestBuilder_1(httpMethod){\n  throwIfEmptyOrNull('httpMethod', httpMethod);\n  throwIfEmptyOrNull('url', 'http://geesm005.github.io/Distance.php?url=https://maps.googleapis.com/maps/api/distancematrix/json?origins=Alden+MN&destinations=Albert+Lea+MN&key=AIzaSyAYq2wYjHYGKCaSJoZJOYYcBux90_aLsq8');\n  this.httpMethod = httpMethod;\n  this.url_0 = 'http://geesm005.github.io/Distance.php?url=https://maps.googleapis.com/maps/api/distancematrix/json?origins=Alden+MN&destinations=Albert+Lea+MN&key=AIzaSyAYq2wYjHYGKCaSJoZJOYYcBux90_aLsq8';\n}\n\ndefineSeed(56, 1, {}, RequestBuilder_0);\n_.includeCredentials = false;\n_.timeoutMillis = 0;\nvar GET;\nfunction RequestBuilder$1_0(val$request, val$callback){\n  this.val$request = val$request;\n  this.val$callback = val$callback;\n}\n\ndefineSeed(57, 1, {}, RequestBuilder$1_0);\n_.onReadyStateChange = function onReadyStateChange(xhr){\n  if (xhr.readyState == 4) {\n    $clearOnReadyStateChange(xhr);\n    $fireOnResponseReceived(this.val$request, this.val$callback);\n  }\n}\n;\nfunction RequestBuilder$Method_0(name_0){\n  this.name_0 = name_0;\n}\n\ndefineSeed(58, 1, {}, RequestBuilder$Method_0);\n_.toString$ = function toString_4(){\n  return this.name_0;\n}\n;\nfunction RequestException_0(message){\n  Exception_0.call(this, message);\n}\n\ndefineSeed(59, 7, makeCastMap([Q$RequestException, Q$Serializable, Q$Throwable]), RequestException_0);\nfunction RequestPermissionException_0(url_0){\n  RequestException_0.call(this, 'The URL ' + url_0 + ' is invalid or violates the same-origin security restriction');\n}\n\ndefineSeed(60, 59, makeCastMap([Q$RequestException, Q$Serializable, Q$Throwable]), RequestPermissionException_0);\nfunction RequestTimeoutException_0(timeoutMillis){\n  RequestException_0.call(this, 'A request timeout has expired after ' + timeoutMillis + ' ms');\n}\n\ndefineSeed(61, 59, makeCastMap([Q$RequestException, Q$Serializable, Q$Throwable]), RequestTimeoutException_0);\ndefineSeed(62, 1, {});\nfunction ResponseImpl_0(xmlHttpRequest){\n  this.xmlHttpRequest = xmlHttpRequest;\n}\n\ndefineSeed(63, 62, {}, ResponseImpl_0);\nfunction throwIfEmptyOrNull(name_0, value_0){\n  throwIfNull(name_0, value_0);\n  if (0 == $trim(value_0).length) {\n    throw new IllegalArgumentException_1(name_0 + ' cannot be empty');\n  }\n}\n\nfunction throwIfNull(name_0, value_0){\n  if (null == value_0) {\n    throw new NullPointerException_1(name_0 + ' cannot be null');\n  }\n}\n\ndefineSeed(67, 1, {});\nfunction JSONArray_0(arr){\n  this.jsArray = arr;\n}\n\ndefineSeed(66, 67, makeCastMap([Q$JSONArray]), JSONArray_0);\n_.equals$ = function equals_0(other){\n  if (!instanceOf(other, Q$JSONArray)) {\n    return false;\n  }\n  return this.jsArray == dynamicCast(other, Q$JSONArray).jsArray;\n}\n;\n_.hashCode$ = function hashCode_2(){\n  return getHashCode(this.jsArray);\n}\n;\n_.toString$ = function toString_5(){\n  var c, i, sb, v, func;\n  sb = new StringBuffer_0;\n  $append_0(sb.impl, '[');\n  for (i = 0 , c = this.jsArray.length; i < c; i++) {\n    i > 0 && ($append_0(sb.impl, ',') , sb);\n    $append_1(sb, (v = this.jsArray[i] , func = ($clinit_JSONParser() , typeMap)[typeof v] , func?func(v):throwUnknownTypeException(typeof v)));\n  }\n  $append_0(sb.impl, ']');\n  return sb.impl.string;\n}\n;\nfunction $clinit_JSONBoolean(){\n  $clinit_JSONBoolean = nullMethod;\n  FALSE = new JSONBoolean_0(false);\n  TRUE = new JSONBoolean_0(true);\n}\n\nfunction JSONBoolean_0(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(68, 67, {}, JSONBoolean_0);\n_.toString$ = function toString_6(){\n  return $clinit_Boolean() , '' + this.value_0;\n}\n;\n_.value_0 = false;\nvar FALSE, TRUE;\nfunction JSONException_0(message){\n  RuntimeException_1.call(this, message);\n}\n\nfunction JSONException_1(cause){\n  this.detailMessage = !cause?null:$toString(cause);\n  this.cause = cause;\n  $fillInStackTrace($clinit_StackTraceCreator$CollectorChrome());\n}\n\ndefineSeed(69, 6, makeCastMap([Q$Serializable, Q$Throwable]), JSONException_0, JSONException_1);\nfunction $clinit_JSONNull(){\n  $clinit_JSONNull = nullMethod;\n  instance_0 = new JSONNull_0;\n}\n\nfunction JSONNull_0(){\n}\n\ndefineSeed(70, 67, {}, JSONNull_0);\n_.toString$ = function toString_7(){\n  return 'null';\n}\n;\nvar instance_0;\nfunction JSONNumber_0(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(71, 67, makeCastMap([Q$JSONNumber]), JSONNumber_0);\n_.equals$ = function equals_1(other){\n  if (!instanceOf(other, Q$JSONNumber)) {\n    return false;\n  }\n  return this.value_0 == dynamicCast(other, Q$JSONNumber).value_0;\n}\n;\n_.hashCode$ = function hashCode_3(){\n  return round_int((new Double_0(this.value_0)).value_0);\n}\n;\n_.toString$ = function toString_8(){\n  return this.value_0 + '';\n}\n;\n_.value_0 = 0;\nfunction $computeKeys0(this$static, result){\n  var jsObject = this$static.jsObject;\n  var i = 0;\n  for (var key in jsObject) {\n    jsObject.hasOwnProperty(key) && (result[i++] = key);\n  }\n  return result;\n}\n\nfunction $get(this$static, key){\n  if (key == null) {\n    throw new NullPointerException_0;\n  }\n  return $get0(this$static, key);\n}\n\nfunction $get0(this$static, key){\n  var jsObject = this$static.jsObject;\n  var v;\n  key = String(key);\n  jsObject.hasOwnProperty(key) && (v = jsObject[key]);\n  var func = ($clinit_JSONParser() , typeMap)[typeof v];\n  var ret = func?func(v):throwUnknownTypeException(typeof v);\n  return ret;\n}\n\nfunction JSONObject_0(jsValue){\n  this.jsObject = jsValue;\n}\n\ndefineSeed(72, 67, makeCastMap([Q$JSONObject]), JSONObject_0);\n_.equals$ = function equals_2(other){\n  if (!instanceOf(other, Q$JSONObject)) {\n    return false;\n  }\n  return this.jsObject == dynamicCast(other, Q$JSONObject).jsObject;\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return getHashCode(this.jsObject);\n}\n;\n_.toString$ = function toString_9(){\n  var first, key, key$index, key$max, keys_0, sb;\n  sb = new StringBuffer_0;\n  $append_0(sb.impl, '{');\n  first = true;\n  keys_0 = $computeKeys0(this, initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, 0, 0));\n  for (key$index = 0 , key$max = keys_0.length; key$index < key$max; ++key$index) {\n    key = keys_0[key$index];\n    first?(first = false):($append_0(sb.impl, ', ') , sb);\n    $append_2(sb, escapeValue(key));\n    $append_0(sb.impl, ':');\n    $append_1(sb, $get(this, key));\n  }\n  $append_0(sb.impl, '}');\n  return sb.impl.string;\n}\n;\nfunction $clinit_JSONParser(){\n  $clinit_JSONParser = nullMethod;\n  typeMap = {'boolean':createBoolean, number:createNumber, string:createString, object:createObject, 'function':createObject, undefined:createUndefined};\n}\n\nfunction createBoolean(v){\n  return $clinit_JSONBoolean() , v?TRUE:FALSE;\n}\n\nfunction createNumber(v){\n  return new JSONNumber_0(v);\n}\n\nfunction createObject(o){\n  if (!o) {\n    return $clinit_JSONNull() , instance_0;\n  }\n  var v = o.valueOf?o.valueOf():o;\n  if (v !== o) {\n    var func = typeMap[typeof v];\n    return func?func(v):throwUnknownTypeException(typeof v);\n  }\n   else if (o instanceof Array || o instanceof $wnd.Array) {\n    return new JSONArray_0(o);\n  }\n   else {\n    return new JSONObject_0(o);\n  }\n}\n\nfunction createString(v){\n  return new JSONString_0(v);\n}\n\nfunction createUndefined(){\n  return null;\n}\n\nfunction evaluate(json, strict){\n  var v;\n  if (strict && ($clinit_JsonUtils() , hasJsonParse)) {\n    try {\n      v = JSON.parse(json);\n    }\n     catch (e) {\n      return throwJSONException('Error parsing JSON: ' + e);\n    }\n  }\n   else {\n    if (strict) {\n      if (!($clinit_JsonUtils() , !/[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]/.test(json.replace(/\"(\\\\.|[^\"\\\\])*\"/g, '')))) {\n        return throwJSONException('Illegal character in JSON string');\n      }\n    }\n    json = escapeJsonForEval(json);\n    try {\n      v = eval('(' + json + ')');\n    }\n     catch (e) {\n      return throwJSONException('Error parsing JSON: ' + e);\n    }\n  }\n  var func = typeMap[typeof v];\n  return func?func(v):throwUnknownTypeException(typeof v);\n}\n\nfunction parse_0(jsonString){\n  $clinit_JSONParser();\n  var ex;\n  if (jsonString == null) {\n    throw new NullPointerException_0;\n  }\n  if (jsonString.length == 0) {\n    throw new IllegalArgumentException_1('empty argument');\n  }\n  try {\n    return evaluate(jsonString, false);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$JavaScriptException)) {\n      ex = $e0;\n      throw new JSONException_1(ex);\n    }\n     else \n      throw unwrap($e0);\n  }\n}\n\nfunction throwJSONException(message){\n  throw new JSONException_0(message);\n}\n\nfunction throwUnknownTypeException(typeString){\n  $clinit_JSONParser();\n  throw new JSONException_0(\"Unexpected typeof result '\" + typeString + \"'; please report this bug to the GWT team\");\n}\n\nvar typeMap;\nfunction JSONString_0(value_0){\n  if (value_0 == null) {\n    throw new NullPointerException_0;\n  }\n  this.value_0 = value_0;\n}\n\ndefineSeed(74, 67, makeCastMap([Q$JSONString]), JSONString_0);\n_.equals$ = function equals_3(other){\n  if (!instanceOf(other, Q$JSONString)) {\n    return false;\n  }\n  return $equals(this.value_0, dynamicCast(other, Q$JSONString).value_0);\n}\n;\n_.hashCode$ = function hashCode_5(){\n  return getHashCode_0(this.value_0);\n}\n;\n_.toString$ = function toString_10(){\n  return escapeValue(this.value_0);\n}\n;\nfunction Array_0(){\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = {l:0, m:0, h:0};\n    }\n  }\n   else if (seedType > 0 && seedType < 3) {\n    var value_0 = seedType == 1?0:false;\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value_0;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.___clazz$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index_0, value_0){\n  if (value_0 != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ == -1 && (value_0.typeMarker$ == nullMethod || canCast(value_0, 1))) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ < -1 && !(value_0.typeMarker$ != nullMethod && !canCast(value_0, 1)) && !canCastUnsafe(value_0, -array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index_0] = value_0;\n}\n\ndefineSeed(75, 1, {}, Array_0);\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_0, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value_0;\n  for (var name_0 in protoType) {\n    if (value_0 = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value_0;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src_0, dstId){\n  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src_0, dstId){\n  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];\n}\n\nfunction dynamicCast(src_0, dstId){\n  if (src_0 != null && !canCastUnsafe(src_0, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction dynamicCastJso(src_0){\n  if (src_0 != null && (src_0.typeMarker$ == nullMethod || canCast(src_0, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction instanceOf(src_0, dstId){\n  return src_0 != null && canCast(src_0, dstId);\n}\n\nfunction instanceOfJso(src_0){\n  return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);\n}\n\nfunction isJavaObject(src_0){\n  return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);\n}\n\nfunction maskUndefined(src_0){\n  return src_0 == null?null:src_0;\n}\n\nfunction round_int(x_0){\n  return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\nfunction init(){\n  var runtimeValue;\n  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('safari', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (safari) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad();\n  isStatsAvailable() && onModuleStart('fareApp.client.FareApp');\n  $onModuleLoad_0(new FareApp_0);\n}\n\nfunction getCachableJavaScriptException(e_0){\n  var jse = e_0.__gwt$exception;\n  if (!jse) {\n    jse = new JavaScriptException_0(e_0);\n    try {\n      e_0.__gwt$exception = jse;\n    }\n     catch (e) {\n    }\n  }\n  return jse;\n}\n\nfunction unwrap(e){\n  var jse;\n  if (instanceOf(e, Q$JavaScriptException)) {\n    jse = dynamicCast(e, Q$JavaScriptException);\n    if (jse.e !== ($clinit_JavaScriptException() , NOT_SET)) {\n      return jse.e === NOT_SET?null:jse.e;\n    }\n  }\n  return e;\n}\n\nfunction wrap(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return e == null?new JavaScriptException_0(null):getCachableJavaScriptException(e);\n}\n\nfunction isStatsAvailable(){\n  return !!$stats;\n}\n\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $clinit_DOM(){\n  $clinit_DOM = nullMethod;\n  impl = new DOMImplWebkit_0;\n}\n\nfunction dispatchEvent_0(evt, elem, listener){\n  $clinit_DOM();\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $clinit_DOM();\n  $sinkBitlessEvent(impl, elem, eventTypeName);\n}\n\nfunction sinkEvents(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents(impl, elem, eventBits);\n}\n\nvar currentEvent = null, impl, sCaptureElem;\nfunction $onModuleLoad(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; i++) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction getTypeInt(typeName){\n  return $eventGetTypeInt(($clinit_DOM() , typeName));\n}\n\nfunction $clinit_Window(){\n  $clinit_Window = nullMethod;\n  impl_0 = new WindowImpl_0;\n}\n\nfunction addCloseHandler(handler){\n  $clinit_Window();\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_0?TYPE_0:(TYPE_0 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type_0, handler){\n  return $addHandler((!handlers_0 && (handlers_0 = new Window$WindowHandlers_0) , handlers_0), type_0, handler);\n}\n\nfunction alert_0(msg){\n  $clinit_Window();\n  $wnd.alert(msg);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  if (!closeHandlersInitialized) {\n    $initWindowCloseHandler(impl_0);\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction onClosed(){\n  $clinit_Window();\n  closeHandlersInitialized && fire((!handlers_0 && (handlers_0 = new Window$WindowHandlers_0) , handlers_0));\n}\n\nfunction onClosing(){\n  $clinit_Window();\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_0 && $fireEvent(handlers_0, event_0);\n    return null;\n  }\n  return null;\n}\n\nvar closeHandlersInitialized = false, handlers_0, impl_0;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_1 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\ndefineSeed(89, 40, {}, Window$ClosingEvent_0);\n_.dispatch = function dispatch_1(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_1(){\n  return TYPE_1;\n}\n;\nvar TYPE_1;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\ndefineSeed(90, 48, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $maybeInitializeEventSystem(this$static){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    new DOMImpl$1_0(this$static);\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction cleanupDOM(dom){\n  var allElements, elem, i, listener;\n  allElements = $doc.getElementsByTagName('*');\n  for (i = 0; i < allElements.length; i++) {\n    elem = allElements[i];\n    listener = getEventListener(elem);\n    if (listener) {\n      $maybeInitializeEventSystem(dom);\n      $sinkEventsImpl(elem, 0);\n      setEventListener(elem, null);\n    }\n    maybeRemoveDisposableEvent(elem);\n  }\n}\n\nfunction getEventListener(elem){\n  var maybeListener = elem.__listener;\n  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, Q$EventListener)?maybeListener:null;\n}\n\nfunction maybeRemoveDisposableEvent(elem){\n  var diEvents = elem.__gwt_disposeEvent;\n  if (diEvents) {\n    for (var i = 0, l = diEvents.length; i < l; i++) {\n      var diEvent = diEvents[i];\n      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);\n      elem.__gwt_disposeEvent = null;\n    }\n  }\n}\n\nfunction setEventListener(elem, listener){\n  elem.__listener = listener;\n}\n\ndefineSeed(91, 1, {});\nvar eventSystemIsInitialized = false;\nfunction DOMImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(92, 1, {}, DOMImpl$1_0);\nfunction $clinit_DOMImplStandard(){\n  $clinit_DOMImplStandard = nullMethod;\n  bitlessEventDispatchers = {_default_:dispatchEvent_2, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};\n  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};\n}\n\nfunction $disposeEventSystem(){\n  var foreach = foreach_0;\n  foreach(captureEvents, function(e, fn){\n    $wnd.removeEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $initEventSystem(){\n  dispatchEvent_1 = $entry(dispatchEvent_2);\n  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);\n  var foreach = foreach_0;\n  var bitlessEvents = bitlessEventDispatchers;\n  foreach(bitlessEvents, function(e, fn){\n    bitlessEvents[e] = $entry(fn);\n  }\n  );\n  var captureEvents_0 = captureEventDispatchers;\n  foreach(captureEvents_0, function(e, fn){\n    captureEvents_0[e] = $entry(fn);\n  }\n  );\n  foreach(captureEvents_0, function(e, fn){\n    $wnd.addEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $sinkBitlessEvent(this$static, elem, eventTypeName){\n  var dispatchMap, dispatcher;\n  $maybeInitializeEventSystem(this$static);\n  dispatchMap = bitlessEventDispatchers;\n  dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];\n  elem.addEventListener(eventTypeName, dispatcher, false);\n}\n\nfunction $sinkEvents(this$static, elem, bits){\n  $maybeInitializeEventSystem(this$static);\n  $sinkEventsImpl(elem, bits);\n}\n\nfunction $sinkEventsImpl(elem, bits){\n  var chMask = (elem.__eventBits || 0) ^ bits;\n  elem.__eventBits = bits;\n  if (!chMask)\n    return;\n  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_1:null);\n  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_1:null);\n  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_1:null);\n  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_1:null);\n  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_1:null);\n  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_1:null);\n  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_1:null);\n  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_1:null);\n  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_1:null);\n  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_1:null);\n  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_1:null);\n  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_1:null);\n  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_1:null);\n  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_1:null);\n  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_1:null);\n  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);\n  chMask & 65536 && (elem.onerror = bits & 65536?dispatchEvent_1:null);\n  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_1:null);\n  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_1:null);\n  chMask & 524288 && (elem.onpaste = bits & 524288?dispatchEvent_1:null);\n  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_1:null);\n  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_1:null);\n  chMask & 4194304 && (elem.ontouchend = bits & 4194304?dispatchEvent_1:null);\n  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_1:null);\n  chMask & 16777216 && (elem.ongesturestart = bits & 16777216?dispatchEvent_1:null);\n  chMask & 33554432 && (elem.ongesturechange = bits & 33554432?dispatchEvent_1:null);\n  chMask & 67108864 && (elem.ongestureend = bits & 67108864?dispatchEvent_1:null);\n}\n\nfunction dispatchCapturedEvent(evt){\n  $clinit_DOM();\n}\n\nfunction dispatchCapturedMouseEvent(evt){\n  $clinit_DOM();\n  return;\n}\n\nfunction dispatchDragEvent(evt){\n  evt.preventDefault();\n  dispatchEvent_2(evt);\n}\n\nfunction dispatchEvent_2(evt){\n  var element;\n  element = getFirstAncestorWithListener(evt);\n  if (!element) {\n    return;\n  }\n  dispatchEvent_0(evt, element.nodeType != 1?null:element, getEventListener(element));\n}\n\nfunction dispatchUnhandledEvent_0(evt){\n  var element;\n  element = $eventGetCurrentTarget(evt);\n  element['__gwtLastUnhandledEvent'] = evt.type;\n  dispatchEvent_2(evt);\n}\n\nfunction getFirstAncestorWithListener(evt){\n  var curElem;\n  curElem = $eventGetCurrentTarget(evt);\n  while (!!curElem && !getEventListener(curElem)) {\n    curElem = curElem.parentNode;\n  }\n  return curElem;\n}\n\ndefineSeed(93, 91, {});\nvar bitlessEventDispatchers, captureEventDispatchers, dispatchEvent_1, dispatchUnhandledEvent;\ndefineSeed(94, 93, {});\nfunction DOMImplWebkit_0(){\n  $clinit_DOMImplStandard();\n}\n\ndefineSeed(95, 94, {}, DOMImplWebkit_0);\nfunction foreach_0(map_0, fn){\n  for (var e in map_0) {\n    map_0.hasOwnProperty(e) && fn(e, map_0[e]);\n  }\n}\n\nfunction $initWindowCloseHandler(this$static){\n  var oldOnBeforeUnload = this$static.oldOnBeforeUnload = $wnd.onbeforeunload;\n  var oldOnUnload = this$static.oldOnUnload = $wnd.onunload;\n  $wnd.onbeforeunload = function(evt){\n    var ret, oldRet;\n    try {\n      ret = $entry(onClosing)();\n    }\n     finally {\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\n    }\n    if (ret != null) {\n      return ret;\n    }\n    if (oldRet != null) {\n      return oldRet;\n    }\n  }\n  ;\n  $wnd.onunload = $entry(function(evt){\n    try {\n      $clinit_Window();\n      closeHandlersInitialized && fire((!handlers_0 && (handlers_0 = new Window$WindowHandlers_0) , handlers_0));\n    }\n     finally {\n      oldOnUnload && oldOnUnload(evt);\n      $wnd.onresize = null;\n      $wnd.onscroll = null;\n      $wnd.onbeforeunload = null;\n      $wnd.onunload = null;\n    }\n  }\n  );\n}\n\nfunction WindowImpl_0(){\n}\n\ndefineSeed(97, 1, {}, WindowImpl_0);\nfunction IncompatibleRemoteServiceException_0(){\n  RuntimeException_1.call(this, 'This application is out of date, please click the refresh button on your browser.');\n}\n\ndefineSeed(100, 6, makeCastMap([Q$Serializable, Q$Throwable]), IncompatibleRemoteServiceException_0);\nfunction deserialize(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate(streamReader){\n  return new IncompatibleRemoteServiceException_0;\n}\n\nfunction serialize(streamWriter, instance){\n  null.nullMethod(instance.detailMessage);\n}\n\nfunction RpcTokenException_0(){\n  RuntimeException_1.call(this, 'Invalid RPC token');\n}\n\ndefineSeed(102, 6, makeCastMap([Q$Serializable, Q$Throwable]), RpcTokenException_0);\nfunction deserialize_0(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate_0(streamReader){\n  return new RpcTokenException_0;\n}\n\nfunction serialize_0(streamWriter, instance){\n  null.nullMethod(instance.nullField);\n}\n\nfunction deserialize_1(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate_1(streamReader){\n  return new IllegalArgumentException_0;\n}\n\nfunction deserialize_2(streamReader, instance){\n  setDetailMessage(instance, null.nullMethod());\n}\n\nfunction instantiate_2(streamReader){\n  return new NumberFormatException_0;\n}\n\nfunction deserialize_3(streamReader, instance){\n}\n\nfunction instantiate_3(streamReader){\n  return null.nullMethod();\n}\n\nfunction serialize_1(streamWriter, instance){\n  null.nullMethod();\n}\n\nfunction setDetailMessage(instance, value_0){\n  instance.detailMessage = value_0;\n}\n\ndefineSeed(110, 1, {});\nfunction $setElement(this$static, elem){\n  this$static.element = elem;\n}\n\nfunction $sinkBitlessEvent_0(this$static, eventTypeName){\n  sinkBitlessEvent(($clinit_DOM() , this$static.element), eventTypeName);\n}\n\ndefineSeed(116, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));\n_.toString$ = function toString_11(){\n  if (!this.element) {\n    return '(null handle)';\n  }\n  return ($clinit_DOM() , this.element).outerHTML;\n}\n;\n",
"function $addDomHandler(this$static, handler, type_0){\n  var typeInt;\n  typeInt = getTypeInt(type_0.name_0);\n  typeInt == -1?$sinkBitlessEvent_0(this$static, type_0.name_0):this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), typeInt | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= typeInt);\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.attached) {\n    throw new IllegalStateException_0(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $clinit_DOM();\n  setEventListener(this$static.element, this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && (this$static.eventsToSink == -1?sinkEvents(this$static.element, bitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= bitsToAdd));\n  this$static.doAttachChildren();\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.attached) {\n    throw new IllegalStateException_0(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.doDetachChildren();\n  }\n   finally {\n    $clinit_DOM();\n    setEventListener(this$static.element, null);\n    this$static.attached = false;\n  }\n}\n\nfunction $removeFromParent(this$static){\n  if (!this$static.parent_0) {\n    $clinit_RootPanel();\n    $contains_0(widgetsToDetach, this$static) && detachNow(this$static);\n  }\n   else if (this$static.parent_0) {\n    $remove_0(this$static.parent_0, this$static);\n  }\n   else if (this$static.parent_0) {\n    throw new IllegalStateException_0(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $setParent(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.attached && $onDetach(this$static);\n    }\n     finally {\n      this$static.parent_0 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_0('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.attached && $onAttach_0(this$static);\n  }\n}\n\ndefineSeed(115, 116, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  var related;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = event_0.relatedTarget;\n      if (!!related && $isOrHasChild(this.element, related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this, this.element);\n}\n;\n_.attached = false;\n_.eventsToSink = 0;\ndefineSeed(114, 115, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\nfunction $add(this$static, child, container){\n  $removeFromParent(child);\n  $add_0(this$static.children, child);\n  $clinit_DOM();\n  $appendChild(container, ($clinit_PotentialElement() , $resolve(child.element)));\n  $setParent(child, this$static);\n}\n\nfunction $remove(this$static, w){\n  var elem, parent_0;\n  if (w.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , w.element);\n    $removeChild((parent_0 = elem.parentNode , (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null) , parent_0), elem);\n    $remove_2(this$static.children, w);\n  }\n  return true;\n}\n\ndefineSeed(113, 114, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_0(){\n  return new WidgetCollection$WidgetIterator_0(this.children);\n}\n;\nfunction $remove_0(this$static, w){\n  var removed;\n  removed = $remove(this$static, w);\n  removed && changeToStaticPositioning(($clinit_DOM() , w.element));\n  return removed;\n}\n\nfunction changeToStaticPositioning(elem){\n  $setPropertyImpl(elem.style, 'left', '');\n  $setPropertyImpl(elem.style, 'top', '');\n  $setPropertyImpl(elem.style, 'position', '');\n}\n\ndefineSeed(112, 113, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next(), Q$Widget);\n    try {\n      c.execute(w);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_2(caught, e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\ndefineSeed(117, 53, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), AttachDetachException_0);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\ndefineSeed(118, 1, {}, AttachDetachException$1_0);\n_.execute = function execute(w){\n  w.onAttach();\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\ndefineSeed(119, 1, {}, AttachDetachException$2_0);\n_.execute = function execute_0(w){\n  $onDetach(w);\n}\n;\nfunction $onAttach_0(this$static){\n  var tabIndex;\n  $onAttach(this$static);\n  tabIndex = $getTabIndex(($clinit_DOM() , this$static.element));\n  -1 == tabIndex && (this$static.element.tabIndex = 0 , undefined);\n}\n\ndefineSeed(122, 115, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onAttach = function onAttach_0(){\n  $onAttach_0(this);\n}\n;\nfunction ButtonBase_0(elem){\n  $setElement(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(121, 122, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Button_0(){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.setAttribute('type', 'button') , e));\n  ($clinit_DOM() , this.element).className = 'gwt-Button';\n  this.element.innerHTML = 'hi';\n}\n\ndefineSeed(120, 121, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_0);\nfunction $clinit_PotentialElement(){\n  $clinit_PotentialElement = nullMethod;\n  declareShim();\n}\n\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction declareShim(){\n  var shim = function(){\n  }\n  ;\n  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){\n    return this[name_0];\n  }\n  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){\n    this[name_0] = undefined;\n  }\n  , setAttribute:function(name_0, value_0){\n    this[name_0] = value_0;\n  }\n  , src:'', style:{}, title:''};\n  $wnd.GwtPotentialElementShim = shim;\n}\n\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  this.children = new WidgetCollection_0;\n  $setElement(this, ($clinit_DOM() , elem));\n  $onAttach(this);\n}\n\nfunction detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    $onDetach(widget);\n  }\n   finally {\n    $remove_4(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map_0);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get_0(){\n  $clinit_RootPanel();\n  var rp;\n  rp = dynamicCast($get_0(rootPanels, null), Q$RootPanel);\n  if (rp) {\n    return rp;\n  }\n  rootPanels.size_0 == 0 && addCloseHandler(new RootPanel$3_0);\n  rp = new RootPanel$DefaultRootPanel_0;\n  $put(rootPanels, null, rp);\n  $add_2(widgetsToDetach, rp);\n  return rp;\n}\n\ndefineSeed(124, 112, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]));\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\ndefineSeed(125, 1, {}, RootPanel$1_0);\n_.execute = function execute_1(w){\n  w.attached && $onDetach(w);\n}\n;\nfunction RootPanel$3_0(){\n}\n\ndefineSeed(126, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, $doc.body);\n}\n\ndefineSeed(127, 124, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);\nfunction $add_0(this$static, w){\n  $insert(this$static, w, this$static.size_0);\n}\n\nfunction $indexOf(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size_0; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert(this$static, w, beforeIndex){\n  var i, i0, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size_0 == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, this$static.array.length * 2, 0);\n    for (i = 0; i < this$static.array.length; ++i) {\n      setCheck(newArray, i, this$static.array[i]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size_0;\n  for (i0 = this$static.size_0 - 1; i0 > beforeIndex; --i0) {\n    setCheck(this$static.array, i0, this$static.array[i0 - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_1(this$static, index_0){\n  var i;\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size_0;\n  for (i = index_0; i < this$static.size_0; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size_0, null);\n}\n\nfunction $remove_2(this$static, w){\n  var index_0;\n  index_0 = $indexOf(this$static, w);\n  if (index_0 == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_1(this$static, index_0);\n}\n\nfunction WidgetCollection_0(){\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, 4, 0);\n}\n\ndefineSeed(128, 1, {}, WidgetCollection_0);\n_.iterator = function iterator_1(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.size_0 = 0;\nfunction $next(this$static){\n  if (this$static.index_0 >= this$static.this$0.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.currentWidget = this$static.this$0.array[this$static.index_0];\n  ++this$static.index_0;\n  return this$static.currentWidget;\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(129, 1, {}, WidgetCollection$WidgetIterator_0);\n_.hasNext = function hasNext(){\n  return this.index_0 < this.this$0.size_0;\n}\n;\n_.next = function next_0(){\n  return $next(this);\n}\n;\n_.index_0 = 0;\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('webkit') != -1;\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;\n  }\n  ())\n    return 'ie10';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction $clearOnReadyStateChange(this$static){\n  var self_0 = this$static;\n  setTimeout_0(function(){\n    self_0.onreadystatechange = new Function;\n  }\n  , 0);\n}\n\nfunction $open(this$static, httpMethod, url_0){\n  this$static.open(httpMethod, url_0, true);\n}\n\nfunction $setOnReadyStateChange(this$static, handler){\n  var _this = this$static;\n  this$static.onreadystatechange = $entry(function(){\n    handler.onReadyStateChange(_this);\n  }\n  );\n}\n\nfunction create(){\n  var xhr;\n  if ($wnd.XMLHttpRequest) {\n    xhr = new $wnd.XMLHttpRequest;\n  }\n   else {\n    try {\n      xhr = new $wnd.ActiveXObject('MSXML2.XMLHTTP.3.0');\n    }\n     catch (e) {\n      xhr = new $wnd.ActiveXObject('Microsoft.XMLHTTP');\n    }\n  }\n  return xhr;\n}\n\nfunction SimpleEventBus$1_0(){\n}\n\ndefineSeed(133, 1, {}, SimpleEventBus$1_0);\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(134, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);\nfunction $getDistance(this$static){\n  var builder;\n  alert_0('http://geesm005.github.io/Distance.php?url=https://maps.googleapis.com/maps/api/distancematrix/json?origins=Alden+MN&destinations=Albert+Lea+MN&key=AIzaSyAYq2wYjHYGKCaSJoZJOYYcBux90_aLsq8');\n  throwIfNull('decodedURL', 'http://geesm005.github.io/Distance.php?url=https://maps.googleapis.com/maps/api/distancematrix/json?origins=Alden+MN&destinations=Albert+Lea+MN&key=AIzaSyAYq2wYjHYGKCaSJoZJOYYcBux90_aLsq8');\n  encodeURI('http://geesm005.github.io/Distance.php?url=https://maps.googleapis.com/maps/api/distancematrix/json?origins=Alden+MN&destinations=Albert+Lea+MN&key=AIzaSyAYq2wYjHYGKCaSJoZJOYYcBux90_aLsq8');\n  builder = new RequestBuilder_0(($clinit_RequestBuilder() , GET));\n  try {\n    $sendRequest(builder, new DistanceFinder$1_0(this$static));\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$RequestException)) {\n      alert_0(\"RequestException: Couldn't retrieve JSON\");\n    }\n     else \n      throw unwrap($e0);\n  }\n  return this$static.rString;\n}\n\nfunction DistanceFinder_0(){\n}\n\ndefineSeed(135, 1, {}, DistanceFinder_0);\n_.rString = '';\nfunction $onResponseReceived(this$static, response){\n  var rt, jA, jb, jd, jTry, jc, value_0, finishedString;\n  alert_0(response.xmlHttpRequest.responseText);\n  if (200 == response.xmlHttpRequest.status) {\n    rt = response.xmlHttpRequest.responseText;\n    this$static.this$0.rString = (jA = ($clinit_JSONParser() , dynamicCast(parse_0(rt), Q$JSONObject)) , $get(jA, 'rows') , jb = dynamicCast(parse_0(rt), Q$JSONObject) , $get(jb, 'elements') , jd = dynamicCast(parse_0(rt), Q$JSONObject) , jTry = $get(jd, 'distance') , jc = dynamicCast(parse_0(jTry.toString$()), Q$JSONObject) , value_0 = $get(jc, 'value') , finishedString = value_0.toString$() , alert_0('me made it') , finishedString);\n  }\n   else {\n    alert_0(\"Couldn't retrieve JSON (\" + response.xmlHttpRequest.status + ')');\n  }\n}\n\nfunction DistanceFinder$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(136, 1, {}, DistanceFinder$1_0);\nfunction $onModuleLoad_0(){\n  var b, myFinder, rp;\n  rp = ($clinit_RootPanel() , get_0());\n  b = new Button_0;\n  myFinder = new DistanceFinder_0;\n  $addDomHandler(b, new FareApp$1_0(myFinder), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE));\n  $add(rp, b, ($clinit_DOM() , rp.element));\n}\n\nfunction FareApp_0(){\n  $clinit_GreetingService_Proxy();\n}\n\ndefineSeed(137, 1, {}, FareApp_0);\nfunction FareApp$1_0(val$myFinder){\n  this.val$myFinder = val$myFinder;\n}\n\ndefineSeed(138, 1, makeCastMap([Q$ClickHandler, Q$EventHandler, Q$FareApp$1]), FareApp$1_0);\nfunction $clinit_GreetingService_Proxy(){\n  $clinit_GreetingService_Proxy = nullMethod;\n  new GreetingService_TypeSerializer_0;\n}\n\nfunction $clinit_GreetingService_TypeSerializer(){\n  var result, result_0;\n  $clinit_GreetingService_TypeSerializer = nullMethod;\n  result = {};\n  result['com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException/3936916533'] = [instantiate, deserialize, serialize];\n  result['com.google.gwt.user.client.rpc.RpcTokenException/2345075298'] = [instantiate_0, deserialize_0];\n  result['com.google.gwt.user.client.rpc.XsrfToken/4254043109'] = [undefined, undefined, serialize_0];\n  result['java.lang.IllegalArgumentException/1755012560'] = [instantiate_1, deserialize_1];\n  result['java.lang.NumberFormatException/3305228476'] = [instantiate_2, deserialize_2];\n  result['java.lang.String/2004016611'] = [instantiate_3, deserialize_3, serialize_1];\n  result_0 = [];\n  result_0[getHashCode(Lcom_google_gwt_user_client_rpc_IncompatibleRemoteServiceException_2_classLit)] = 'com.google.gwt.user.client.rpc.IncompatibleRemoteServiceException/3936916533';\n  result_0[getHashCode(Lcom_google_gwt_user_client_rpc_RpcTokenException_2_classLit)] = 'com.google.gwt.user.client.rpc.RpcTokenException/2345075298';\n  result_0[getHashCode(Lcom_google_gwt_user_client_rpc_XsrfToken_2_classLit)] = 'com.google.gwt.user.client.rpc.XsrfToken/4254043109';\n  result_0[getHashCode(Ljava_lang_IllegalArgumentException_2_classLit)] = 'java.lang.IllegalArgumentException/1755012560';\n  result_0[getHashCode(Ljava_lang_NumberFormatException_2_classLit)] = 'java.lang.NumberFormatException/3305228476';\n  result_0[getHashCode(Ljava_lang_String_2_classLit)] = 'java.lang.String/2004016611';\n}\n\nfunction GreetingService_TypeSerializer_0(){\n  $clinit_GreetingService_TypeSerializer();\n  new HashMap_0;\n}\n\ndefineSeed(140, 110, {}, GreetingService_TypeSerializer_0);\nfunction ArrayStoreException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(141, 6, makeCastMap([Q$Serializable, Q$Throwable]), ArrayStoreException_0);\nfunction $clinit_Boolean(){\n  $clinit_Boolean = nullMethod;\n  new Boolean_1(false);\n  new Boolean_1(true);\n}\n\nfunction Boolean_1(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(142, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);\n_.equals$ = function equals_4(o){\n  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_6(){\n  return this.value_0?1231:1237;\n}\n;\n_.toString$ = function toString_12(){\n  return this.value_0?'true':'false';\n}\n;\n_.value_0 = false;\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId != 0?-seedId:0) && setClassLiteral(seedId != 0?-seedId:0, clazz);\n  clazz.modifiers = 4;\n  return clazz;\n}\n\nfunction createForClass(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  return clazz;\n}\n\nfunction getSeedFunction(clazz){\n  var func = seedTable[clazz.seedId];\n  clazz = null;\n  return func;\n}\n\nfunction isInstantiable(seedId){\n  return typeof seedId == 'number' && seedId > 0;\n}\n\nfunction setClassLiteral(seedId, clazz){\n  var proto;\n  clazz.seedId = seedId;\n  if (seedId == 2) {\n    proto = String.prototype;\n  }\n   else {\n    if (seedId > 0) {\n      var seed = getSeedFunction(clazz);\n      if (seed) {\n        proto = seed.prototype;\n      }\n       else {\n        seed = seedTable[seedId] = function(){\n        }\n        ;\n        seed.___clazz$ = clazz;\n        return;\n      }\n    }\n     else {\n      return;\n    }\n  }\n  proto.___clazz$ = clazz;\n}\n\ndefineSeed(143, 1, {}, Class_0);\n_.toString$ = function toString_13(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.seedId = 0;\nfunction ClassCastException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(144, 6, makeCastMap([Q$Serializable, Q$Throwable]), ClassCastException_0);\ndefineSeed(146, 1, makeCastMap([Q$Serializable]));\nfunction Double_0(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(145, 146, makeCastMap([Q$Serializable, Q$Comparable, Q$Double]), Double_0);\n_.equals$ = function equals_5(o){\n  return instanceOf(o, Q$Double) && dynamicCast(o, Q$Double).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_7(){\n  return round_int(this.value_0);\n}\n;\n_.toString$ = function toString_14(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction IllegalArgumentException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalArgumentException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(147, 6, makeCastMap([Q$Serializable, Q$Throwable]), IllegalArgumentException_0, IllegalArgumentException_1);\nfunction IllegalStateException_0(s){\n  RuntimeException_1.call(this, s);\n}\n\ndefineSeed(148, 6, makeCastMap([Q$Serializable, Q$Throwable]), IllegalStateException_0);\nfunction IndexOutOfBoundsException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(149, 6, makeCastMap([Q$Serializable, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);\nfunction toPowerOfTwoString(value_0){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value_0 >= 0) {\n    while (value_0 > 15) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n  buf[pos] = digits[value_0 & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction NullPointerException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(151, 6, makeCastMap([Q$Serializable, Q$Throwable]), NullPointerException_0, NullPointerException_1);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction NumberFormatException_0(){\n  IllegalArgumentException_0.call(this);\n}\n\ndefineSeed(153, 147, makeCastMap([Q$Serializable, Q$Throwable]), NumberFormatException_0);\nfunction StackTraceElement_0(methodName, fileName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.fileName = fileName;\n  this.lineNumber = -1;\n}\n\ndefineSeed(154, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);\n_.toString$ = function toString_15(){\n  return this.className_0 + '.' + this.methodName + '(' + (this.fileName != null?this.fileName:'Unknown Source') + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nfunction $charAt(this$static, index_0){\n  return this$static.charCodeAt(index_0);\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $indexOf_0(this$static, str){\n  return this$static.indexOf(str);\n}\n\nfunction $lastIndexOf(this$static, str){\n  return this$static.lastIndexOf(str);\n}\n\nfunction $lastIndexOf_0(this$static, str, start_0){\n  return this$static.lastIndexOf(str, start_0);\n}\n\nfunction $split(this$static, regex, maxMatch){\n  var compiled = new RegExp(regex, 'g');\n  var out = [];\n  var count = 0;\n  var trail = this$static;\n  var lastTrail = null;\n  while (true) {\n    var matchObj = compiled.exec(trail);\n    if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {\n      out[count] = trail;\n      break;\n    }\n     else {\n      out[count] = trail.substring(0, matchObj.index);\n      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);\n      compiled.lastIndex = 0;\n      if (lastTrail == trail) {\n        out[count] = trail.substring(0, 1);\n        trail = trail.substring(1);\n      }\n      lastTrail = trail;\n      count++;\n    }\n  }\n  if (maxMatch == 0 && this$static.length > 0) {\n    var lastNonEmpty = out.length;\n    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {\n      --lastNonEmpty;\n    }\n    lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);\n  }\n  var jr = __createArray(out.length);\n  for (var i = 0; i < out.length; ++i) {\n    jr[i] = out[i];\n  }\n  return jr;\n}\n\nfunction $substring(this$static, beginIndex){\n  return this$static.substr(beginIndex, this$static.length - beginIndex);\n}\n\nfunction $substring_0(this$static, beginIndex, endIndex){\n  return this$static.substr(beginIndex, endIndex - beginIndex);\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction __createArray(numElements){\n  return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, numElements, 0);\n}\n\nfunction __valueOf(x_0, start_0, end){\n  x_0 = x_0.slice(start_0, end);\n  return String.fromCharCode.apply(null, x_0);\n}\n\nfunction fromCharCode(ch_0){\n  return String.fromCharCode(ch_0);\n}\n\nfunction fromCodePoint(codePoint){\n  var hiSurrogate, loSurrogate;\n  if (codePoint >= 65536) {\n    hiSurrogate = 55296 + (~~(codePoint - 65536) >> 10 & 1023) & 65535;\n    loSurrogate = 56320 + (codePoint - 65536 & 1023) & 65535;\n    return fromCharCode(hiSurrogate) + fromCharCode(loSurrogate);\n  }\n   else {\n    return String.fromCharCode(codePoint & 65535);\n  }\n}\n\n_ = String.prototype;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\n_.equals$ = function equals_6(other){\n  return $equals(this, other);\n}\n;\n_.hashCode$ = function hashCode_8(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = _.toString;\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction $append_1(this$static, x_0){\n  $append(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction $append_2(this$static, x_0){\n  $append_0(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction StringBuffer_0(){\n  this.impl = new StringBufferImplAppend_0;\n}\n\ndefineSeed(156, 1, makeCastMap([Q$CharSequence]), StringBuffer_0);\n_.toString$ = function toString_16(){\n  return this.impl.string;\n}\n;\nfunction $append_3(this$static, x_0){\n  $append_0(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction StringBuilder_0(s){\n  this.impl = new StringBufferImplAppend_0;\n  $append_0(this.impl, s);\n}\n\ndefineSeed(157, 1, makeCastMap([Q$CharSequence]), StringBuilder_0);\n_.toString$ = function toString_17(){\n  return this.impl.string;\n}\n;\nfunction UnsupportedOperationException_0(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(158, 6, makeCastMap([Q$Serializable, Q$Throwable]), UnsupportedOperationException_0);\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toString_0(this$static){\n  var comma, iter, sb, value_0;\n  sb = new StringBuffer_0;\n  comma = null;\n  $append_0(sb.impl, '[');\n  iter = this$static.iterator();\n  while (iter.hasNext()) {\n    comma != null?($append_0(sb.impl, comma) , sb):(comma = ', ');\n    value_0 = iter.next();\n    $append_0(sb.impl, value_0 === this$static?'(this Collection)':'' + value_0);\n  }\n  $append_0(sb.impl, ']');\n  return sb.impl.string;\n}\n\ndefineSeed(159, 1, {});\n_.add_0 = function add_0(o){\n  throw new UnsupportedOperationException_0('Add not supported on this collection');\n}\n;\n_.contains_0 = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  return !!iter;\n}\n;\n_.toString$ = function toString_18(){\n  return $toString_0(this);\n}\n;\nfunction $keySet(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\ndefineSeed(161, 1, makeCastMap([Q$Map]));\n",
"_.equals$ = function equals_7(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size_0 != otherMap.size_0) {\n    return false;\n  }\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(otherMap)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = dynamicCast($next_0(entry$iterator.iter), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?$hasStringValue(this, dynamicCast(otherKey, Q$String)):$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_9(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = dynamicCast($next_0(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.toString$ = function toString_19(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(iter.iter);) {\n    entry = dynamicCast($next_0(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue();\n  }\n  return s + '}';\n}\n;\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add_0(array[i]);\n      }\n    }\n  }\n}\n\nfunction $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add_0(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size_0 = 0;\n}\n\nfunction $containsKey(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_0(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put(this$static, key, value_0){\n  return key == null?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value_0, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue();\n        entry.setValue(value_0);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value_0);\n  array.push(entry);\n  ++this$static.size_0;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value_0){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value_0;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size_0;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value_0){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size_0;\n  stringMap[key] = value_0;\n  return result;\n}\n\nfunction $remove_3(this$static, key){\n  return !key?$removeNullSlot(this$static):$removeHashValue(this$static, key, ~~getHashCode(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size_0;\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size_0;\n  }\n  return result;\n}\n\ndefineSeed(160, 161, makeCastMap([Q$Map]));\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.nullSlotLive = false;\n_.size_0 = 0;\ndefineSeed(163, 159, makeCastMap([Q$Set]));\n_.equals$ = function equals_8(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_1() != this.size_1()) {\n    return false;\n  }\n  for (iter = other.iterator(); iter.hasNext();) {\n    otherItem = iter.next();\n    if (!this.contains_0(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_10(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator(); iter.hasNext();) {\n    next = iter.next();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\nfunction $contains(this$static, o){\n  var entry, key, value_0;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey(this$static.this$0, key)) {\n      value_0 = $get_0(this$static.this$0, key);\n      return $equals_0(entry.getValue(), value_0);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(162, 163, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);\n_.contains_0 = function contains_0(o){\n  return $contains(this, o);\n}\n;\n_.iterator = function iterator_2(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.size_1 = function size_1(){\n  return this.this$0.size_0;\n}\n;\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add_1(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\ndefineSeed(164, 1, {}, AbstractHashMap$EntrySetIterator_0);\n_.hasNext = function hasNext_0(){\n  return $hasNext(this.iter);\n}\n;\n_.next = function next_1(){\n  return dynamicCast($next_0(this.iter), Q$Map$Entry);\n}\n;\ndefineSeed(166, 1, makeCastMap([Q$Map$Entry]));\n_.equals$ = function equals_9(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_11(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue() != null && (valueHash = hashCode__devirtual$(this.getValue()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_20(){\n  return this.getKey() + '=' + this.getValue();\n}\n;\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(165, 166, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);\n_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\ndefineSeed(167, 166, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\nfunction checkIndex(index_0, size_0){\n  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);\n}\n\nfunction indexOutOfBounds(index_0, size_0){\n  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);\n}\n\ndefineSeed(168, 159, makeCastMap([Q$List]));\n_.add_1 = function add_1(index_0, element){\n  throw new UnsupportedOperationException_0('Add not supported on this list');\n}\n;\n_.add_0 = function add_2(obj){\n  this.add_1(this.size_1(), obj);\n  return true;\n}\n;\n_.equals$ = function equals_10(o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this.size_1() != other.size_1()) {\n    return false;\n  }\n  iter = new AbstractList$IteratorImpl_0(this);\n  iterOther = other.iterator();\n  while (iter.i < iter.this$0_0.size_1()) {\n    elem = $next_0(iter);\n    elemOther = $next_0(iterOther);\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_12(){\n  var iter, k, obj;\n  k = 1;\n  iter = new AbstractList$IteratorImpl_0(this);\n  while (iter.i < iter.this$0_0.size_1()) {\n    obj = $next_0(iter);\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n;\n_.iterator = function iterator_3(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return new AbstractList$ListIteratorImpl_0(this, 0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\nfunction $hasNext(this$static){\n  return this$static.i < this$static.this$0_0.size_1();\n}\n\nfunction $next_0(this$static){\n  if (this$static.i >= this$static.this$0_0.size_1()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get_0(this$static.i++);\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\ndefineSeed(169, 1, {}, AbstractList$IteratorImpl_0);\n_.hasNext = function hasNext_1(){\n  return $hasNext(this);\n}\n;\n_.next = function next_2(){\n  return $next_0(this);\n}\n;\n_.i = 0;\nfunction $previous(this$static){\n  if (this$static.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0.get_0(--this$static.i);\n}\n\nfunction AbstractList$ListIteratorImpl_0(this$0, start_0){\n  var size_0;\n  this.this$0 = this$0;\n  AbstractList$IteratorImpl_0.call(this, this$0);\n  size_0 = this$0.size_1();\n  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);\n  this.i = start_0;\n}\n\ndefineSeed(170, 169, {}, AbstractList$ListIteratorImpl_0);\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\ndefineSeed(171, 163, makeCastMap([Q$Set]), AbstractMap$1_0);\n_.contains_0 = function contains_1(key){\n  return $containsKey(this.this$0, key);\n}\n;\n_.iterator = function iterator_4(){\n  return $iterator(this);\n}\n;\n_.size_1 = function size_2(){\n  return this.val$entrySet.this$0.size_0;\n}\n;\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\ndefineSeed(172, 1, {}, AbstractMap$1$1_0);\n_.hasNext = function hasNext_2(){\n  return $hasNext(this.val$outerIter.iter);\n}\n;\n_.next = function next_3(){\n  var entry;\n  entry = dynamicCast($next_0(this.val$outerIter.iter), Q$Map$Entry);\n  return entry.getKey();\n}\n;\nfunction $add_1(this$static, o){\n  setCheck(this$static.array, this$static.size_0++, o);\n  return true;\n}\n\nfunction $indexOf_1(this$static, o, index_0){\n  for (; index_0 < this$static.size_0; ++index_0) {\n    if (equalsWithNullCheck(o, this$static.array[index_0])) {\n      return index_0;\n    }\n  }\n  return -1;\n}\n\nfunction ArrayList_0(){\n  this.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);\n}\n\nfunction splice_0(array, index_0, deleteCount, value_0){\n  array.splice(index_0, deleteCount, value_0);\n}\n\ndefineSeed(173, 168, makeCastMap([Q$Serializable, Q$List]), ArrayList_0);\n_.add_1 = function add_3(index_0, o){\n  (index_0 < 0 || index_0 > this.size_0) && indexOutOfBounds(index_0, this.size_0);\n  splice_0(this.array, index_0, 0, o);\n  ++this.size_0;\n}\n;\n_.add_0 = function add_4(o){\n  return $add_1(this, o);\n}\n;\n_.contains_0 = function contains_2(o){\n  return $indexOf_1(this, o, 0) != -1;\n}\n;\n_.get_0 = function get_1(index_0){\n  return checkIndex(index_0, this.size_0) , this.array[index_0];\n}\n;\n_.size_1 = function size_3(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\ndefineSeed(175, 168, makeCastMap([Q$Serializable, Q$List]), Collections$EmptyList_0);\n_.contains_0 = function contains_3(object){\n  return false;\n}\n;\n_.get_0 = function get_2(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.size_1 = function size_4(){\n  return 0;\n}\n;\nfunction $equals_0(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\ndefineSeed(176, 160, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);\nfunction $add_2(this$static, o){\n  var old;\n  old = $put(this$static.map_0, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey(this$static.map_0, o);\n}\n\nfunction $remove_4(this$static, o){\n  return $remove_3(this$static.map_0, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map_0 = new HashMap_0;\n}\n\ndefineSeed(177, 163, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);\n_.add_0 = function add_5(o){\n  return $add_2(this, o);\n}\n;\n_.contains_0 = function contains_4(o){\n  return $contains_0(this, o);\n}\n;\n_.iterator = function iterator_5(){\n  return $iterator($keySet(this.map_0));\n}\n;\n_.size_1 = function size_5(){\n  return this.map_0.size_0;\n}\n;\n_.toString$ = function toString_21(){\n  return $toString_0($keySet(this.map_0));\n}\n;\nfunction MapEntryImpl_0(key, value_0){\n  this.key = key;\n  this.value_0 = value_0;\n}\n\ndefineSeed(178, 166, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);\n_.getKey = function getKey_1(){\n  return this.key;\n}\n;\n_.getValue = function getValue_1(){\n  return this.value_0;\n}\n;\n_.setValue = function setValue_1(value_0){\n  var old;\n  old = this.value_0;\n  this.value_0 = value_0;\n  return old;\n}\n;\nfunction NoSuchElementException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(179, 6, makeCastMap([Q$Serializable, Q$Throwable]), NoSuchElementException_0);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\nvar $entry = registerEntry();\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\n",
"var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 13), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 9), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 184), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 8), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 7), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 6), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 154), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 186), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 81), LfareApp_client_FareApp_2_classLit = createForClass('fareApp.client.', 'FareApp', 137), LfareApp_client_FareApp$1_2_classLit = createForClass('fareApp.client.', 'FareApp$1', 138), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean', 142), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 146), _3C_classLit = createForArray('', '[C', 187), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 143), Ljava_lang_Double_2_classLit = createForClass('java.lang.', 'Double', 145), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 185), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 144), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 5), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 157), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 141), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 116), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 115), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 114), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 113), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 112), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 124), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 127), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 125), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 126), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 54), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 53), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 117), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 118), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 119), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 122), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 121), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 120), LfareApp_client_DistanceFinder_2_classLit = createForClass('fareApp.client.', 'DistanceFinder', 135), LfareApp_client_DistanceFinder$1_2_classLit = createForClass('fareApp.client.', 'DistanceFinder$1', 136), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 151), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 147), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 22), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 161), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 160), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 176), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 159), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 163), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 162), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 164), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 166), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 165), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 167), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 171), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 172), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 177), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 41), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 40), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 39), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 38), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 37), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 36), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 44), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 43), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 42), Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$Collector', 18), Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorMoz_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$CollectorMoz', 20), Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorChrome_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$CollectorChrome', 19), Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorChromeNoSourceMap_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$CollectorChromeNoSourceMap', 21), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 23), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 15), Lcom_google_gwt_user_client_rpc_impl_SerializerBase_2_classLit = createForClass('com.google.gwt.user.client.rpc.impl.', 'SerializerBase', 110), LfareApp_client_GreetingService_1TypeSerializer_2_classLit = createForClass('fareApp.client.', 'GreetingService_TypeSerializer', 140), Lcom_google_gwt_user_client_rpc_IncompatibleRemoteServiceException_2_classLit = createForClass('com.google.gwt.user.client.rpc.', 'IncompatibleRemoteServiceException', 100), Lcom_google_gwt_user_client_rpc_RpcTokenException_2_classLit = createForClass('com.google.gwt.user.client.rpc.', 'RpcTokenException', 102), Lcom_google_gwt_user_client_rpc_XsrfToken_2_classLit = createForClass('com.google.gwt.user.client.rpc.', 'XsrfToken', null), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException', 153), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 48), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 51), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 50), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 49), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 133), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 134), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 89), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 90), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 128), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 188), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 129), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 156), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 158), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 45), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 168), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 173), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 169), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 170), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 91), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 92), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 52), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 93), Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandardBase', 94), Lcom_google_gwt_user_client_impl_DOMImplWebkit_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplWebkit', 95), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 148), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 178), Lcom_google_gwt_user_client_impl_WindowImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImpl', 97), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 47), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 149), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 179), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 175), Lcom_google_gwt_http_client_RequestBuilder_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder', 56), Lcom_google_gwt_http_client_RequestBuilder$Method_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$Method', 58), Lcom_google_gwt_http_client_RequestBuilder$1_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestBuilder$1', 57), Lcom_google_gwt_http_client_RequestException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestException', 59), Lcom_google_gwt_http_client_Request_2_classLit = createForClass('com.google.gwt.http.client.', 'Request', 55), Lcom_google_gwt_http_client_Response_2_classLit = createForClass('com.google.gwt.http.client.', 'Response', 62), Lcom_google_gwt_http_client_ResponseImpl_2_classLit = createForClass('com.google.gwt.http.client.', 'ResponseImpl', 63), Lcom_google_gwt_http_client_RequestPermissionException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestPermissionException', 60), Lcom_google_gwt_http_client_RequestTimeoutException_2_classLit = createForClass('com.google.gwt.http.client.', 'RequestTimeoutException', 61), Lcom_google_gwt_json_client_JSONValue_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONValue', 67), Lcom_google_gwt_json_client_JSONObject_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONObject', 72), Lcom_google_gwt_json_client_JSONException_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONException', 69), Lcom_google_gwt_json_client_JSONBoolean_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONBoolean', 68), Lcom_google_gwt_json_client_JSONNumber_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNumber', 71), Lcom_google_gwt_json_client_JSONString_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONString', 74), Lcom_google_gwt_json_client_JSONNull_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONNull', 70), Lcom_google_gwt_json_client_JSONArray_2_classLit = createForClass('com.google.gwt.json.client.', 'JSONArray', 66);\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');\n//# sourceURL=fareapp-0.js\n"]);
